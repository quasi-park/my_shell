[追加機能]
1. cd(change directory)において~と未入力を対応。
使用例)
$cd ~/Desktop
$cd
など
実装方法)
一文字目が何かで判定。

2. historyコマンドの実装
使用例)
$history
1: cd
...
実装方法)
ソースファイルと同ディレクトリ下に.mysh_historyと言うファイルを作成し、ここに全ての入力を記述。
シェル立ち上げと同時にこのファイルから一行づつ読み込み、構造体リストに挿入。
新しくコマンドを入力した時点で(Enterキーを入力した時点で)このコマンドもリストの最後尾に挿入。

3. CTRL+Pで一つ前のhistoryを表示
使用例)
$(CTRL+Pを入力)
$cd ~

実装方法)
入力をraw modeに変更し、1文字ずつ入力を受け入れる。この際、各入力がどれに当たっていたかによって行う作業をswitchした。
CTRL+Pではhistoryを管理しているリストから一つ前の履歴を取り出し、これをバッファリストに書き換えることで実装した。
また、どこの段階の履歴を指しているのかを管理するために、ポインタを使用し、一回押すごとにポインタをずらした。

4. 上矢印、下矢印でhistoryの遡り
使用例)
$(\x1b[A)
$cd ~
$(\x1b[B)
$cd ..

実装方法)
上矢印(\x1b[A)はCTRL+Pと同様。
下矢印は上矢印と逆の方向にリストポインタを移動。なお、今回はBashを参考に作成したため、Bashと同様の動作をする。

5. 右矢印、左矢印でカーソル移動
使用例)表示不可能

実装方法)
カーソルポジションと言う変数を用いて、この変数は0から現在入力している文字列の長さまでの整数をとる。
変数が範囲内であるうちはカーソル移動可能、範囲外はprintf("\a")でビープ音が流れる。
また、カーソルはprintf("\x1b[1D")/printf("\x1b[1C")で移動。

6. Backspaceで文字消去
使用例)表示不可能

実装方法)カーソルポジションの文字をリストから消去する。

7. Tabでファイルの自動補填および推測
使用方法)
$cd Desk(tabを入力)
$cd Desktop/

実装方法)
Tabが入力された段階で、カーソルがどのポジションにあるかを確認する。もしカーソルが1word目にあったらPATHから各コマンドを取り出す。
もし一致する文字列が1つであったらそれをカーソルポジションに挿入する。そうでなければ最大で一致しているエリアを挿入、もう一度tabが押されるまで待機し、押された段階で全リスト表示する。
2word目であったらディレクトリ情報を解析し、同上の手順をふむ。また、|のあとは1word目とする。
